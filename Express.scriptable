{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "red",
    "glyph" : "magic"
  },
  "name" : "Express",
  "script" : "\/\/ ====== 前置准备 ======\nlet fm = FileManager.iCloud();\nlet imgPath = fm.joinPath(fm.documentsDirectory(), \"kuaidi.png\");\nlet dataPath = fm.joinPath(fm.documentsDirectory(), \"kuaidi.json\");\n\nfunction pad(n) { return n < 10 ? \"0\" + n : n; }\nfunction color(light, dark) { return Color.dynamic(new Color(light), new Color(dark)); }\nfunction simplifyCompanyName(name) {\n  if (!name) return \"未知快递\";\n  return name.replace(\/^【|】$\/g, \"\").replace(\/快递|物流\/g, \"\").replace(\/\\s+\/g, \"\") || \"未知快递\";\n}\nfunction createSeparatorImage(width) {\n  const ctx = new DrawContext();\n  ctx.size = new Size(width, 1);\n  ctx.setFillColor(color(\"#EEEEEE\", \"#333333\"));\n  ctx.fillRect(new Rect(0, 0, width, 1));\n  return ctx.getImage();\n}\nasync function ensureFile(path) {\n  if (fm.fileExists(path)) {\n    if (fm.isFileStoredIniCloud(path) && !fm.isFileDownloaded(path)) {\n      await fm.downloadFileFromiCloud(path);\n    }\n    return true;\n  }\n  return false;\n}\nfunction showErrorWidget(message) {\n  let w = new ListWidget();\n  w.backgroundColor = color(\"#FFFFFF\", \"#1C1C1E\");\n  w.cornerRadius = 16;\n  w.setPadding(12, 12, 12, 12);\n  let text = w.addText(message);\n  text.font = Font.systemFont(14);\n  text.textColor = Color.red();\n  text.centerAlignText();\n  Script.setWidget(w);\n  Script.complete();\n}\n\n\/\/ ====== 数据加载 ======\nlet parcels = [];\nlet unpickedCount = 0; \/\/ 统计未取件总数\n\nif (!(await ensureFile(dataPath))) {\n  showErrorWidget(\"缺少 kuaidi.json 文件，请先运行 ExpressData.js 创建文件。\");\n  return;\n}\ntry {\n  let rawData = fm.readString(dataPath);\n  if (!rawData) {\n    showErrorWidget(\"kuaidi.json 文件内容为空，请检查文件！\");\n    return;\n  }\n  let allParcels = JSON.parse(rawData) || [];\n\n  \/\/ 按时间从新到旧排序\n  allParcels.sort((a, b) => {\n    let ta = new Date(a.time).getTime();\n    let tb = new Date(b.time).getTime();\n    return tb - ta;\n  });\n\n  \/\/ 统计所有未取件的数量\n  unpickedCount = allParcels.filter(p => p.status !== \"已取件\").length;\n\n  \/\/ 右侧显示：跳过已取件，最多 5 条\n  const maxShow = 5;\n  let display = [];\n  for (let i = 0; i < allParcels.length && display.length < maxShow; i++) {\n    if (allParcels[i].status !== \"已取件\") {\n      display.push(allParcels[i]);\n    }\n  }\n  parcels = display;\n\n} catch (e) {\n  showErrorWidget(\"解析 kuaidi.json 文件失败，请检查文件格式。\");\n  return;\n}\n\n\/\/ ====== 固定展示逻辑 ======\nconst maxShow = 5;\nlet displayParcels = parcels.slice(0, maxShow);\nlet fixedCount = maxShow;\n\n\/\/ ====== 布局参数 ======\nconst widgetWidth = 360;\nconst widgetHeight = 170;\nconst paddingLR = 12 * 2;\nconst spacingMain = 14;\nconst leftWidth = 120;\nconst rightWidth = widgetWidth - leftWidth - paddingLR - spacingMain;\nconst leftHeight = widgetHeight - 24;\nconst itemSpacing = 1;\nconst separatorHeight = 3;\nconst extraTopBottomPadding = 4;\nconst rightContentOffset = 4;\n\n\/\/ 单条高度固定按 5 条来算\nconst totalSpacing = itemSpacing * (fixedCount - 1);\nconst totalSeparatorHeight = separatorHeight * (fixedCount - 1);\nconst usableHeight = leftHeight - totalSpacing - totalSeparatorHeight - extraTopBottomPadding * 2;\nconst singleHeight = Math.floor(usableHeight \/ fixedCount);\n\n\/\/ 固定字体大小\nconst companyFontSize = singleHeight > 50 ? 14 : singleHeight > 40 ? 12 : 10;\nconst codeFontSize = companyFontSize - 1;\nconst addrFontSize = Math.max(codeFontSize - 1, 9);\n\n\/\/ ====== 创建组件 ======\nlet w = new ListWidget();\nw.backgroundColor = color(\"#FFFFFF\", \"#1C1C1E\");\nw.cornerRadius = 16;\nw.setPadding(12, 12, 12, 12);\nw.size = new Size(widgetWidth, widgetHeight);\n\n\/\/ ==== 没有快递时：只显示提示 ====\nif (parcels.length === 0) {\n  let emptyStack = w.addStack();\n  emptyStack.layoutVertically();\n  emptyStack.size = new Size(widgetWidth - paddingLR, widgetHeight - 24);\n  emptyStack.centerAlignContent();\n  emptyStack.addSpacer();\n\n  \/\/ ✅ 横向容器，保证水平居中\n  let row = emptyStack.addStack();\n  row.layoutHorizontally();\n  row.centerAlignContent();\n  row.addSpacer();\n\n  let emptyText = row.addText(\"暂时还没有快递信息呢\");\n  emptyText.font = Font.boldSystemFont(15);\n  emptyText.textColor = color(\"#999999\", \"#AAAAAA\");\n  emptyText.centerAlignText();\n\n  row.addSpacer();\n  emptyStack.addSpacer();\n\n  w.refreshAfterDate = new Date(Date.now() + 30 * 60 * 1000);\n  Script.setWidget(w);\n  Script.complete();\n  return; \/\/ ✅ 提前结束\n}\n\n\/\/ ====== 有快递时：正常布局 ======\nlet mainStack = w.addStack();\nmainStack.layoutHorizontally();\nmainStack.topAlignContent();\nmainStack.spacing = spacingMain;\n\n\/\/ ====== 左侧 ======\nlet leftStack = mainStack.addStack();\nleftStack.layoutVertically();\nleftStack.topAlignContent();\nleftStack.size = new Size(leftWidth, leftHeight);\n\nlet leftPaddingStack = leftStack.addStack();\nleftPaddingStack.layoutHorizontally();\nleftPaddingStack.size = new Size(leftWidth, leftHeight);\nleftPaddingStack.centerAlignContent();\nleftPaddingStack.addSpacer(8);\n\nlet leftContentStack = leftPaddingStack.addStack();\nleftContentStack.layoutVertically();\nleftContentStack.topAlignContent();\nleftContentStack.spacing = 8;\nleftContentStack.size = new Size(leftWidth - 16, leftHeight);\n\nlet titleRow = leftContentStack.addStack();\ntitleRow.layoutHorizontally();\ntitleRow.centerAlignContent();\ntitleRow.spacing = 5;\n\nif (await ensureFile(imgPath)) {\n  let image = fm.readImage(imgPath);\n  let icon = titleRow.addImage(image);\n  icon.imageSize = new Size(26, 26);\n} else {\n  let emoji = titleRow.addText(\"📦\");\n  emoji.font = Font.systemFont(26);\n}\n\nlet title = titleRow.addText(\"Express\");\ntitle.font = Font.boldSystemFont(15);\ntitle.textColor = color(\"#333333\", \"#FFFFFF\");\n\nlet subTitle = leftContentStack.addText(\"已到达\");\nsubTitle.font = Font.systemFont(13);\nsubTitle.textColor = color(\"#666666\", \"#CCCCCC\");\n\n\/\/ 显示所有未取件的数量\nlet countText = leftContentStack.addText(`${unpickedCount} 个`);\ncountText.font = Font.boldSystemFont(22);\ncountText.textColor = color(\"#FF5722\", \"#FFB74D\");\n\nlet remindText = leftContentStack.addText(\"请及时取件！\");\nremindText.font = Font.systemFont(11);\nremindText.textColor = color(\"#FF9800\", \"#FFB74D\");\n\nleftContentStack.addSpacer(2);\nlet now = new Date();\nlet timeText = leftContentStack.addText(\n  `上次更新：${pad(now.getMonth() + 1)}\/${pad(now.getDate())} ${pad(now.getHours())}:${pad(now.getMinutes())}`\n);\ntimeText.font = Font.systemFont(9);\ntimeText.textColor = color(\"#999999\", \"#AAAAAA\");\n\n\/\/ ====== 中间竖线 ======\nlet dividerStack = mainStack.addStack();\ndividerStack.size = new Size(0.5, leftHeight);\ndividerStack.backgroundColor = color(\"#EEEEEE\", \"#333333\");\n\n\/\/ ====== 右侧 ======\nlet rightStack = mainStack.addStack();\nrightStack.layoutVertically();\nrightStack.topAlignContent();\nrightStack.spacing = itemSpacing;\nrightStack.size = new Size(rightWidth, leftHeight);\nrightStack.clip = true;\n\nrightStack.addSpacer(extraTopBottomPadding);\n\nfor (let i = 0; i < fixedCount; i++) {\n  if (i < displayParcels.length) {\n    let p = displayParcels[i];\n    if (!p.status) p.status = \"待取件\";\n\n    let parcelStack = rightStack.addStack();\n    parcelStack.layoutVertically();\n    parcelStack.spacing = 3;\n    parcelStack.size = new Size(rightWidth - rightContentOffset, singleHeight);\n    parcelStack.setPadding(0, rightContentOffset, 0, 0);\n\n    let topRow = parcelStack.addStack();\n    topRow.layoutHorizontally();\n\n    let leftTop = topRow.addStack();\n    leftTop.layoutHorizontally();\n    leftTop.spacing = 8;\n    leftTop.centerAlignContent();\n\n    let company = leftTop.addText(simplifyCompanyName(p.type || \"\"));\n    company.font = Font.boldSystemFont(companyFontSize);\n    company.textColor = color(\"#444444\", \"#FFFFFF\");\n    company.lineLimit = 1;\n    company.minimumScaleFactor = 0.7;\n\n    let displayCode = p.code ? `取件码: ${p.code}` : \"取件码: 无\";\n    let code = leftTop.addText(displayCode);\n    code.font = Font.systemFont(codeFontSize);\n    code.textColor = color(\"#FF5722\", \"#FFB74D\");\n    code.lineLimit = 1;\n    code.minimumScaleFactor = 0.7;\n\n    topRow.addSpacer();\n\n    let statusColor = p.status === \"已取件\" ? \"#4CAF50\" : \"#1976D2\";\n    let status = topRow.addText(p.status);\n    status.font = Font.boldSystemFont(codeFontSize);\n    status.textColor = color(statusColor, statusColor);\n    status.lineLimit = 1;\n    status.minimumScaleFactor = 0.7;\n\n    let bottomRow = parcelStack.addStack();\n    bottomRow.layoutHorizontally();\n\n    let addrColor = color(\"#666666\", \"#CCCCCC\");\n    let timeFont = Font.systemFont(9);\n    let timeColor = color(\"#999999\", \"#AAAAAA\");\n\n    if (p.address) {\n      const addrLength = p.address.length;\n      let fontSize = addrFontSize;\n      if (addrLength > 20 && addrLength <= 40) fontSize = addrFontSize - 1;\n      else if (addrLength > 40) fontSize = Math.max(addrFontSize - 2, 8);\n\n      let addr = bottomRow.addText(p.address);\n      addr.font = Font.systemFont(fontSize);\n      addr.textColor = addrColor;\n      addr.lineLimit = 2;\n      addr.minimumScaleFactor = 0.6;\n    } else {\n      bottomRow.addSpacer();\n    }\n\n    bottomRow.addSpacer();\n\n    if (p.time) {\n      let dateObj = new Date(p.time);\n      if (!isNaN(dateObj)) {\n        let hh = pad(dateObj.getHours());\n        let mm = pad(dateObj.getMinutes());\n        let timeText = bottomRow.addText(`时间 ${hh}:${mm}`);\n        timeText.font = timeFont;\n        timeText.textColor = timeColor;\n        timeText.lineLimit = 1;\n        timeText.minimumScaleFactor = 0.7;\n      }\n    }\n\n    let sepOuter = rightStack.addStack();\n    sepOuter.layoutHorizontally();\n    sepOuter.size = new Size(rightWidth, separatorHeight);\n    sepOuter.addSpacer(rightContentOffset);\n    let sep = sepOuter.addImage(createSeparatorImage(rightWidth - 2 * rightContentOffset));\n    sep.imageSize = new Size(rightWidth - 2 * rightContentOffset, 1);\n    sep.tintColor = color(\"#EEEEEE\", \"#333333\");\n    sepOuter.addSpacer(rightContentOffset);\n\n  } else {\n    let emptyRow = rightStack.addStack();\n    emptyRow.size = new Size(rightWidth - rightContentOffset, singleHeight);\n    emptyRow.addSpacer();\n  }\n}\n\nrightStack.addSpacer(extraTopBottomPadding);\n\n\/\/ ==== 定时刷新 ====\nw.refreshAfterDate = new Date(Date.now() + 30 * 60 * 1000);\n\nScript.setWidget(w);\nScript.complete();",
  "share_sheet_inputs" : [

  ]
}